// Code generated by mockery v2.53.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IMessageQueue is an autogenerated mock type for the IMessageQueue type
type IMessageQueue struct {
	mock.Mock
}

// Consumer provides a mock function with given fields: topic
func (_m *IMessageQueue) Consumer(topic string) error {
	ret := _m.Called(topic)

	if len(ret) == 0 {
		panic("no return value specified for Consumer")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(topic)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Produce provides a mock function with given fields: topic, message
func (_m *IMessageQueue) Produce(topic string, message string) error {
	ret := _m.Called(topic, message)

	if len(ret) == 0 {
		panic("no return value specified for Produce")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(topic, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIMessageQueue creates a new instance of IMessageQueue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIMessageQueue(t interface {
	mock.TestingT
	Cleanup(func())
}) *IMessageQueue {
	mock := &IMessageQueue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
