// Code generated by mockery v2.53.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IHelper is an autogenerated mock type for the IHelper type
type IHelper struct {
	mock.Mock
}

// ConvertJsonToStruct provides a mock function with given fields: jsonStr, result
func (_m *IHelper) ConvertJsonToStruct(jsonStr string, result interface{}) error {
	ret := _m.Called(jsonStr, result)

	if len(ret) == 0 {
		panic("no return value specified for ConvertJsonToStruct")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(jsonStr, result)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ConvertStrToFloat64 provides a mock function with given fields: value
func (_m *IHelper) ConvertStrToFloat64(value string) (float64, error) {
	ret := _m.Called(value)

	if len(ret) == 0 {
		panic("no return value specified for ConvertStrToFloat64")
	}

	var r0 float64
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (float64, error)); ok {
		return rf(value)
	}
	if rf, ok := ret.Get(0).(func(string) float64); ok {
		r0 = rf(value)
	} else {
		r0 = ret.Get(0).(float64)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(value)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ConvertStructToStrJson provides a mock function with given fields: v
func (_m *IHelper) ConvertStructToStrJson(v interface{}) (string, error) {
	ret := _m.Called(v)

	if len(ret) == 0 {
		panic("no return value specified for ConvertStructToStrJson")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(interface{}) (string, error)); ok {
		return rf(v)
	}
	if rf, ok := ret.Get(0).(func(interface{}) string); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(v)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GenPromptPayQrCodeString provides a mock function with given fields: phoneno, amount
func (_m *IHelper) GenPromptPayQrCodeString(phoneno string, amount float64) string {
	ret := _m.Called(phoneno, amount)

	if len(ret) == 0 {
		panic("no return value specified for GenPromptPayQrCodeString")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(string, float64) string); ok {
		r0 = rf(phoneno, amount)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GenUUID provides a mock function with no fields
func (_m *IHelper) GenUUID() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GenUUID")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewIHelper creates a new instance of IHelper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIHelper(t interface {
	mock.TestingT
	Cleanup(func())
}) *IHelper {
	mock := &IHelper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
